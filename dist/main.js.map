{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Components/MovieComponents/movie-card-component/movie-card.component.css","webpack:///./src/app/Components/MovieComponents/movie-card-component/movie-card.component.html","webpack:///./src/app/Components/MovieComponents/movie-card-component/movie-card.component.ts","webpack:///./src/app/Components/MovieComponents/movie-slide/movie-slide.component.css","webpack:///./src/app/Components/MovieComponents/movie-slide/movie-slide.component.html","webpack:///./src/app/Components/MovieComponents/movie-slide/movie-slide.component.ts","webpack:///./src/app/Components/footer/footer.component.css","webpack:///./src/app/Components/footer/footer.component.html","webpack:///./src/app/Components/footer/footer.component.ts","webpack:///./src/app/Components/home/home.component.css","webpack:///./src/app/Components/home/home.component.html","webpack:///./src/app/Components/home/home.component.ts","webpack:///./src/app/Components/login/login.component.css","webpack:///./src/app/Components/login/login.component.html","webpack:///./src/app/Components/login/login.component.ts","webpack:///./src/app/Components/movie-details/movie-details.component.css","webpack:///./src/app/Components/movie-details/movie-details.component.html","webpack:///./src/app/Components/movie-details/movie-details.component.ts","webpack:///./src/app/Components/movie.model.ts","webpack:///./src/app/Components/navbar/navbar.component.css","webpack:///./src/app/Components/navbar/navbar.component.html","webpack:///./src/app/Components/navbar/navbar.component.ts","webpack:///./src/app/Components/preference.model.ts","webpack:///./src/app/Components/preferences/preferences.component.css","webpack:///./src/app/Components/preferences/preferences.component.html","webpack:///./src/app/Components/preferences/preferences.component.ts","webpack:///./src/app/Components/signup/signup.component.css","webpack:///./src/app/Components/signup/signup.component.html","webpack:///./src/app/Components/signup/signup.component.ts","webpack:///./src/app/Components/similar-movies/similar-movies.component.css","webpack:///./src/app/Components/similar-movies/similar-movies.component.html","webpack:///./src/app/Components/similar-movies/similar-movies.component.ts","webpack:///./src/app/Components/time-and-theatre/time-and-theatre.component.css","webpack:///./src/app/Components/time-and-theatre/time-and-theatre.component.html","webpack:///./src/app/Components/time-and-theatre/time-and-theatre.component.ts","webpack:///./src/app/Services/authentication.service.ts","webpack:///./src/app/Services/movie.service.ts","webpack:///./src/app/Services/preference.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n\\n/* A CSS class for properties of mat-card*/\\n.movie-card {\\n    max-width: 250px;\\n    background: white;\\n    text-decoration: none;\\n    color: #444;\\n    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\\n    display: flex;\\n    flex-direction: column;\\n    min-height: 100%;\\n    position: relative;\\n    top: 0;\\n    transition: all .2s ease-in;\\n    \\n  }\\n.mat-card-header{\\n    height: 100px;\\n  }\\n/*A CSS Class that handles styling of hovered card*/\\n.movie-card:hover {\\n    top: -10px;\\n    box-shadow: 0 4px 5px rgba(0,0,0,0.5)\\n  }\\n/* A CSS class for each image*/\\n.movie-header-image {\\n    background-size: cover;\\n  }\\n\\n  \\n\\n  \"","module.exports = \"<mat-card class=\\\"movie-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"movie-header-image\\\"></div>\\n    <mat-card-title> <strong>{{movie.title}}</strong></mat-card-title>\\n    <mat-card-subtitle> {{movie.id}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <img mat-card-image src= {{movie.poster_path}}  alt=\\\"Movie Image\\\">\\n  \\n  <mat-card-actions>\\n    <button class = \\\"btn btn-success\\\" (click)=\\\"getDetails()\\\">Details</button>\\n    <button class = \\\"btn btn-primary\\\">Add to Wishlist</button>\\n  </mat-card-actions>\\n</mat-card>\\n\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Movie } from '../../movie.model';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.css']\n})\n\n\n/*\n* A class that acts as controller for movie-card-component.\n* @Author: Sai Saran Kandimalla.\n* @version 1: created on 09/18/2018.\n*/\nexport class MovieCardComponent implements OnInit {\n\n  @Input() public movie: Movie;\n  \n  \n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  getDetails(){\n    this.router.navigate(['movie_details', {movie_id: this.movie.id}]);\n  }\n\n}\n","module.exports = \"/* the code is referenced from https://www.w3schools.com/howto/howto_js_slideshow.asp */\\n* {box-sizing:border-box}\\n/* Slideshow container */\\n.slideshow-container {\\n  max-width: 1100px;\\n  position: relative;\\n  margin: auto;\\n}\\n/*css styles for image*/\\n.slideshow-container img{\\n    height: 420px;\\n    width:100%;\\n    transition: src 0.6s step-start;\\n}\\n.mySlides {\\n    max-height: 50%;\\n}\\n/* Next & previous buttons */\\n.prev, .next {\\n  cursor: pointer;\\n  position: absolute;\\n  top: 50%;\\n  width: auto;\\n  margin-top: -22px;\\n  padding: 16px;\\n  background-color: #f2f2f2;\\n  font-weight: bold;\\n  font-size: 18px;\\n  transition: 0.6s ease;\\n  border-radius: 0 3px 3px 0;\\n}\\n/* Position the \\\"next button\\\" to the right */\\n.next {\\n  right: 0;\\n  border-radius: 3px 0 0 3px;\\n}\\n/* On hover, add a black background color with a little bit see-through */\\n.prev:hover, .next:hover {\\n  background-color: rgba(252, 250, 250, 0.8);\\n}\\n/* The dots*/\\n.dot {\\n  cursor: pointer;\\n  margin: auto;\\n  position: relative;\\n  height: 10px;\\n  width: 10px;\\n  margin: 0 2px;\\n  bottom: 20px;\\n  background-color: #bbb;\\n  border-radius: 50%;\\n  display: inline-block;\\n  transition: background-color 0.6s ease-in-out;\\n}\\n.center-dot {\\n justify-content: center; \\n}\\n@-webkit-keyframes fade {\\n  from {opacity: .4} \\n  to {opacity: 1}\\n}\\n@keyframes fade {\\n  from {opacity: .4} \\n  to {opacity: 1}\\n}\"","module.exports = \"<!-- The code is referenced from https://www.w3schools.com/howto/howto_js_slideshow.asp -->\\n<!-- Slideshow container -->\\n<div class=\\\"slideshow-container\\\">\\n\\n  <!-- Full-width images with number and caption text -->\\n  <div class=\\\"mySlides\\\">\\n    <img [(src)]=currentMovie.imageUrl alt=\\\"slide show\\\">\\n    </div>\\n  \\n  <!-- Next and previous buttons -->\\n  <a class=\\\"prev\\\" (click)=\\\"changeSlide(-1)\\\">&#10094;</a>\\n  <a class=\\\"next\\\" (click)=\\\"changeSlide(1)\\\">&#10095;</a>\\n  \\n  <!-- Dots -->\\n  <div class=\\\"container\\\">\\n      <div class=\\\"row center-dot\\\">\\n        <div  *ngFor=\\\"let movieId of popularMovies\\\"  >\\n          <span \\n          [ngStyle] = \\\"{'background-color': movieId.sNumber==currentMovie.sNumber?'#717171':'#bbb'}\\\"\\n          class=\\\"dot\\\" (click) = \\\"jumpSlide(movieId.sNumber)\\\" >\\n          </span> \\n        </div>\\n      </div>\\n    </div>\\n</div>\\n<br>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-movie-slide',\n  templateUrl: './movie-slide.component.html',\n  styleUrls: ['./movie-slide.component.css']\n})\nexport class MovieSlideComponent implements OnInit {\n\n  //variable to track slide interval.\n  timeInterval: any;\n  \n  //array of popular movies that needs to be seen on slider.\n  popularMovies: {sNumber: number, imageUrl: string}[] = [\n    {sNumber: 1 , imageUrl: \"https://3.bp.blogspot.com/-1hXvJeWAWGY/WUDHSFbd4HI/AAAAAAAAAOc/9NvGkXxRGlERV8VSWtw7-CVw-YYTfmsKACLcBGAs/s1600/A153L.jpg\"},\n    {sNumber: 2 , imageUrl: \"https://cms-assets.tutsplus.com/uploads/users/166/posts/29098/final_image/Aquaman%20Inspired%20Text%20Effect%20-%20850.jpg\"},\n    {sNumber: 3 , imageUrl: \"https://3.bp.blogspot.com/-1hXvJeWAWGY/WUDHSFbd4HI/AAAAAAAAAOc/9NvGkXxRGlERV8VSWtw7-CVw-YYTfmsKACLcBGAs/s1600/A153L.jpg\"},\n    {sNumber: 4 , imageUrl: \"https://cms-assets.tutsplus.com/uploads/users/166/posts/29098/final_image/Aquaman%20Inspired%20Text%20Effect%20-%20850.jpg\"}\n  ];\n  \n  currentMovie: {sNumber: number, imageUrl: string}=this.popularMovies.find(x=>x.sNumber===1);\n  constructor() {\n    \n   }\n\n  ngOnInit() {\n    this.startSliderInterval(); \n  }\n\n  /*\n  * The method start the interval that traverses between images in regular intervals\n  */\n  startSliderInterval() {\n    this.timeInterval = setInterval(()=> {\n      if(this.currentMovie.sNumber==4) {\n        this.currentMovie=this.popularMovies.find(x=>x.sNumber===1);\n      } else {\n        this.currentMovie = this.popularMovies.find(x=>x.sNumber===this.currentMovie.sNumber+1);\n      }\n    },5000);\n  }\n\n  /*\n  * The method changes slides when \"prev\", \"next\" are clicked\n  * @param: slideNumber: the sNumber of the image that needs to be displayed\n  */\n  changeSlide(slideNumber: number) {\n    if(this.currentMovie.sNumber+slideNumber==0) {\n      this.currentMovie = this.popularMovies.find(x=>x.sNumber===4);\n    }else if(this.currentMovie.sNumber+slideNumber==5) {\n      this.currentMovie = this.popularMovies.find(x=>x.sNumber===1);\n    } else {\n      this.currentMovie = this.popularMovies.find(x=>x.sNumber===this.currentMovie.sNumber+slideNumber);\n    }\n\n  \n\n    //reset slide interval.\n    clearInterval(this.timeInterval);\n    this.startSliderInterval();\n  }\n\n  /*\n  * The method changes slides when \"dots\" are clicked.\n  * @param: slideNumber: the sNumber of the image that needs to be displayed\n  */\n jumpSlide(slideNumber: number) {\n  this.currentMovie = this.popularMovies.find(x=>x.sNumber===slideNumber);\n  \n  //reset slide interval.\n  clearInterval(this.timeInterval);\n  this.startSliderInterval();\n}\n\n}\n","module.exports = \".footer {\\n  background-color: black !important;\\n  /*text-align: center;*/\\n  bottom: 0;\\n  width: 100% !important;\\n  height: 100%; /* Set the fixed height of the footer here */\\n  /*line-height: 80px;  Vertically center the text there */\\n  background-color: #f5f5f5;\\n}\\n\\n.logo{\\n\\tcolor: red;\\n\\tfont-size: 15px;\\n\\tfont-weight: bold;\\n\\tfont-family: \\\"Times New Roman\\\", Times, serif;\\n}\\n\\n.logo-footer{\\n  margin: auto;\\n  width:6%;\\n  padding-bottom: 20px;\\n}\\n\\n.rights{\\n  padding-top: 1%;\\n  float: left;\\n\\tcolor: white;\\n\\tfont-size: 12px;\\n\\tfont-weight: 0;\\n\\ttext-align: center;\\n  width: 100%;\\n}\\n\\n.parallax {\\n    /* The image used */\\n    background-image: url(\\\"coke.jpg\\\");\\n\\n    /* Set a specific height */\\n    min-height: 200px; \\n    max-width: 100%;\\n\\n    /* Create the parallax scrolling effect */\\n    background-attachment: fixed;\\n    background-position: 50% 85%;\\n    background-repeat: no-repeat;\\n    background-size: auto;\\n}\"","module.exports = \"\\n<footer class=\\\"footer\\\">\\n\\t<div class=\\\"parallax\\\"></div>\\n\\t<!-- <div class=\\\"container\\\"> -->\\n\\t\\t<span class=\\\"rights\\\">You are officially findning movies on</span>\\n\\t\\t<div class=\\\"logo-footer\\\"><span class=\\\"logo\\\">FindMyShow</span></div>\\n\\t<!-- </div> -->\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/*CSS class to create rows for movie cards*/\\n.band {\\n    margin: 5px auto;\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: 1fr 1fr 1fr 1fr;\\n        grid-template-columns: 1fr 1fr 1fr 1fr;\\n    -ms-grid-rows: auto;\\n        grid-template-rows: auto;\\n    grid-gap: 20px;\\n  }\"","module.exports = \"<!--The division below handles movie slider.-->\\n<div *ngIf=\\\"showSlider\\\">\\n  <app-movie-slide></app-movie-slide>\\n</div>\\n<br>\\n<div class=\\\"band container\\\">\\n  <div *ngFor=\\\"let movie of movies\\\">\\n    <app-movie-card [movie]=movie> </app-movie-card>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Movie } from \"../movie.model\";\nimport { MovieService } from \"../../Services/movie.service\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})\nexport class HomeComponent implements OnInit {\n  public movies: Movie[];\n  public showSlider: boolean = true;\n\n  constructor(\n    public movieService: MovieService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    if (this.router.url.includes(\"/search\")) {\n      this.showSlider = false;\n      this.searchMovies();\n    } else if (this.router.url.includes(\"/coming_soon\")) {\n      this.showSlider = false;\n      this.upcomingMovies();\n    } else {\n      this.showSlider = true;\n      this.movieService.getMovies().subscribe((response: Movie[]) => {\n        this.movies = response;\n      });\n    }\n  }\n\n  private searchMovies() {\n    this.activatedRoute.params.subscribe(params => {\n      let movieName: string = params[\"name\"];\n      this.movieService\n        .getSearchedMovieList(movieName)\n        .subscribe((res: Movie[]) => {\n          this.movies = res;\n        });\n    });\n  }\n\n  private upcomingMovies() {\n    this.movieService.getUpcomingMovieList().subscribe((res: Movie[]) => {\n      this.movies = res;\n    });\n  }\n}\n","module.exports = \"input.ng-invalid.ng-touched {\\n    border-color: red;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLoginSubmit()\\\">\\n        \\n        <div formGroupName=\\\"loginData\\\">\\n          \\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email:</label>\\n            <input \\n            class=\\\"form-control\\\" \\n            type=\\\"email\\\" \\n            name=\\\"email\\\" \\n            id=\\\"email\\\" \\n            formControlName=\\\"email\\\"\\n            placeholder=\\\"{{emailPlaceholder}}\\\"\\n            [(ngModel)]=\\\"credentials.email\\\">\\n          </div>\\n          \\n          <span \\n          class=\\\"help-block\\\"\\n          *ngIf=\\\"!loginForm.get('loginData.email').valid && loginForm.get('loginData.email').touched\\\">\\n          <p style=\\\"color: red\\\">\\n            please enter valid email!\\n          </p>  \\n          </span>\\n          \\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password:</label>\\n            <input \\n            class=\\\"form-control\\\" \\n            type=\\\"password\\\" \\n            name=\\\"password\\\" \\n            id=\\\"password\\\" \\n            formControlName=\\\"password\\\"\\n            placeholder=\\\"{{passwordPlaceholder}}\\\"\\n            [(ngModel)]=\\\"credentials.password\\\">\\n          </div>\\n\\n          <span \\n          class=\\\"help-block\\\"\\n          *ngIf=\\\"!loginForm.get('loginData.password').valid && loginForm.get('loginData.password').touched\\\">\\n          <p style=\\\"color: red\\\">\\n            please enter password!\\n          </p>  \\n          </span>\\n          \\n          <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-danger\\\" tpye=\\\"submit\\\">Log in</button> \\n          <br>\\n          <br>\\n          <p style=\\\"color: red\\\"> {{error}} </p>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '../../../../node_modules/@angular/forms';\nimport { TokenPayload, AuthenticationService } from '../../Services/authentication.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  //variable that binds with html form.\n  loginForm: FormGroup;\n  emailPlaceholder: string;\n  passwordPlaceholder : string;\n  error: String = \"\";\n  credentials: TokenPayload = {\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    location: '' \n  };\n\n\n  constructor(private authenticationService: AuthenticationService, private router: Router) { }\n\n  ngOnInit() {\n    \n    this.loginForm = new FormGroup({\n      'loginData': new FormGroup({\n        'email': new FormControl(null,[Validators.required,Validators.email]),\n        'password': new FormControl(null,[Validators.required])\n      })\n    });\n\n    this.emailPlaceholder = \"please enter your email here\";\n    this.passwordPlaceholder = \"please enter your password here\";\n     \n  }\n\n  //method that handles login form submit button.\n  onLoginSubmit() {\n    this.authenticationService.login(this.credentials).subscribe(()=> {\n      this.router.navigateByUrl('/home');\n      this.authenticationService.getDialogRef().close();\n    }, (error) => {\n      this.error = \"The username/password is invalid. Please try again\"\n    });\n  }\n\n}\n","module.exports = \".td-config{\\n    width: 200px;\\n    position: relative;\\n    top: 0px;\\n}\\n\\n.scroller {\\n    overflow: scroll;\\n    height: 50px;\\n}\"","module.exports = \"<div style=\\\"display: flex;\\\">\\n    <div><img src={{movie.poster_path}}></div>\\n\\n    <div style=\\\"background-color:white;color: black;padding:10px;\\\">\\n        <table>\\n            <tr>\\n                <td align=\\\"right\\\" class=\\\"td-config\\\"><b>Movie name :</b></td>\\n                <td>\\n                    <font color=\\\"black\\\">&nbsp;{{movie.original_title}}</font>\\n                </td>\\n            </tr>\\n            <tr *ngIf=\\\"movie.tagline\\\">\\n                <td align=\\\"right\\\" class=\\\"td-config\\\"><b>Tag line :</b></td>\\n                <td>\\n                    <font color=\\\"black\\\">&nbsp;{{movie.tagline}}</font>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td align=\\\"right\\\" class=\\\"td-config\\\"><b>Genres :</b></td>\\n                <td><span *ngFor=\\\"let genre of movie.genres; let isLast=last\\\">\\n                        <font color=\\\"black\\\">{{genre.name}}{{isLast ? '' : '/'}}</font>\\n                    </span>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td align=\\\"right\\\" class=\\\"td-config\\\"><b>Original Language :</b></td>\\n                <td>\\n                    <font color=\\\"black\\\">&nbsp;{{movie.original_language}}</font>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td align=\\\"right\\\" valign=\\\"top\\\" class=\\\"td-config\\\"><b>Star Cast :</b></td>\\n                <td>\\n                    <div class=\\\"scroller\\\"><span *ngFor=\\\"let cast of movie.cast; let isLast=last\\\">\\n                            <font color=\\\"black\\\">{{cast.name}}{{isLast ? '' : ', '}}</font>\\n                        </span></div>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td align=\\\"right\\\" valign=\\\"top\\\" class=\\\"td-config\\\"><b>Producer :</b></td>\\n                <td><span *ngFor=\\\"let crew of movie.crew\\\">\\n                        <font color=\\\"black\\\" *ngIf=\\\"crew.job=='Producer'\\\">{{crew.name}},</font>\\n                    </span>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td align=\\\"right\\\" valign=\\\"top\\\" class=\\\"td-config\\\"><b>Director :</b></td>\\n                <td><span *ngFor=\\\"let crew of movie.crew\\\">\\n                        <font color=\\\"black\\\" *ngIf=\\\"crew.job=='Director'\\\">{{crew.name}},</font>\\n                    </span>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td align=\\\"right\\\" class=\\\"td-config\\\"><b>Release Date :</b></td>\\n                <td>\\n                    <font color=\\\"black\\\">&nbsp;{{movie.release_date | date}}</font>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td align=\\\"right\\\" class=\\\"td-config\\\"><b>Vote average :</b></td>\\n                <td>\\n                    <font color=\\\"black\\\">&nbsp;{{movie.vote_average}}</font>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td align=\\\"right\\\" class=\\\"td-config\\\"><b>Vote count :</b></td>\\n                <td>\\n                    <font color=\\\"black\\\">&nbsp;{{movie.vote_count}}</font>\\n                </td>\\n            </tr>\\n        </table>\\n        <br>\\n        <b>Overview:</b>\\n        <p>\\n            <font color=\\\"black\\\">{{movie.overview}}</font>\\n        </p>\\n        <div class=\\\"container row\\\">\\n            <app-time-and-theatre></app-time-and-theatre>\\n        </div>\\n    </div>\\n</div>\\n\\n<div>\\n    <app-similar-movies [movieID]=\\\"movie_id\\\"></app-similar-movies>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MovieService } from '../../Services/movie.service';\nimport { Movie } from '../../Components/movie.model';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./movie-details.component.css']\n})\nexport class MovieDetailsComponent implements OnInit {\n  public movie: Movie;\n  private movie_id: number;\n  constructor(public movieService: MovieService, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => { this.movie_id = params['movie_id'] });\n    this.movieService.getMovieDetails(this.movie_id).subscribe((response: any) => {\n      this.movie = response;\n    });\n  }\n}\n","/*\n* A model class for movie.\n* @Author: Sai Saran Kandimalla.\n* @version 1: created on 09/18/2018.\n*/\nexport class Movie {\n    public title: String;\n    public tagline: String;\n    public overview: String;\n    public vote_average: Number;\n    //public genre: String;\n    public poster_path: String;\n    public id: string;\n    public cinema_detail: [string, string];\n    public show_detail: [string, string, string, string];\n\n    \n}\n","module.exports = \".navigation{\\n\\twidth: 100%;\\n\\tbackground-color: black;\\n\\n}\\n\\n.logo{\\n\\tcolor: maroon;\\n\\ttext-align: right;\\n\\tfont-size: 20px;\\n\\tfont-weight: bold;\\n\\tpadding-top: 17%;\\n\\tcursor: pointer;\\n}\\n\\n.search-box{\\n\\tpadding-top: 4%;\\n\\talign-content: center;\\n\\theight: 0;\\n}\\n\\n.search-button{\\n\\tbackground-color: maroon;\\n\\tcursor: pointer;\\n\\tfont-size: 12px;\\n\\twidth: 40%;\\n\\theight: 100%;\\n\\tborder: 1px solid #8D0707;\\n\\ttext-align: center;\\n}\\n\\n.search-content{\\n\\tpadding-top: 2.7%;\\n}\\n\\n.navbar{\\n\\tfloat: left;\\n\\tpadding: 0rem 30% !important;\\n}\\n\\n.user-button{\\n\\tbackground-color: maroon;\\n\\tfont-size: 10px;\\n\\tvertical-align: center;\\n}\\n\\n.nav-li {\\n\\tcolor: maroon;\\n\\tdisplay: block;\\n\\tpadding: 0.8rem 0.6rem;\\n\\tfont-size: 16px;\\n}\\n\\n.navset {\\n\\tdisplay: flex;\\n\\tpadding-left: 0;\\n\\tmargin-bottom: 0;\\n\\tlist-style: none;\\n\\tmax-width: auto;\\n}\\n\\n.login-button{\\n\\tbackground-color: maroon;\\n\\tcursor: pointer;\\n\\tfont-size: 9px;\\n \\tborder: 1px solid black;\\n \\ttext-align: center;\\n \\tvertical-align: center;\\n }\\n\\n.log{\\n \\tpadding-left: 1%;\\n \\tdisplay: inline;\\n }\\n\\n.caret-text{\\n\\t margin-left: 10px;\\n\\t color: maroon;\\n }\\n\\na:not([href]):not([tabindex]) {\\n\\t color: white;\\n }\\n\\n@media (min-width: 768px) and (max-width: 1199px) { \\n\\n\\t.logo{\\n\\t\\tcolor: maroon;\\n\\t\\ttext-align: right;\\n\\t\\tfont-size: 18px;\\n\\t\\tfont-weight: bold;\\n\\t\\tpadding-top: 17%;\\n\\t}\\n\\n\\t.search-box{\\n\\t\\tpadding-top: 3%;\\n\\t\\talign-content: center;\\n\\t\\theight: 0;\\n\\t}\\n\\n\\t.search-button{\\n\\t\\tbackground-color: maroon;\\n\\t\\tfont-size: 10px;\\n\\t\\twidth: 75%;\\n\\t\\theight: 100%;\\n\\t\\tborder: 1px solid #8D0707;\\n\\t\\ttext-align: center;\\n\\t}\\n\\n\\t.search-content{\\n\\t\\tpadding-top: 2%;\\n\\t\\tpadding-left: 1% !important;\\n\\t}\\n\\n    .nav-li{\\n    \\tcolor: maroon;\\n\\t\\tdisplay: block;\\n\\t\\tpadding: 0.8rem 0.4rem;\\n\\t\\tfont-size: 11px;\\n    }\\n\\n    .navbar{\\n\\t\\tpadding: 0rem 32% !important;\\n\\t}\\n\\n\\t.login-button{\\n\\t \\tbackground-color: maroon;\\n\\t \\tfont-size: 8px;\\n\\t \\tborder: 1px solid black;\\n\\t \\ttext-align: center;\\n\\t \\tvertical-align: center;\\n\\t \\theight: 2%;\\n\\t }\\n\\n\\t .signup-button{\\n\\t\\tbackground-color: maroon;\\n\\t\\tfont-size: 8px;\\n\\t\\tborder: 1px solid black;\\n\\t\\ttext-align: center;\\n\\t\\tvertical-align: center;\\n\\t\\theight: 2%;\\n\\t}\\t \\n}\\n\\n@media (max-width: 767px) { \\n\\n\\t.logo{\\n\\t\\tcolor: maroon;\\n\\t\\ttext-align: right;\\n\\t\\tfont-size: 16px;\\n\\t\\tfont-weight: bold;\\n\\t\\tpadding-top: 17%;\\n\\t}\\n\\n\\t.search-box{\\n\\t\\tpadding-top: 2%;\\n\\t\\talign-content: center;\\n\\t\\theight: 0;\\n\\t}\\n\\n\\t.search-button{\\n\\t\\tbackground-color: maroon;\\n\\t\\tfont-size: 10px;\\n\\t\\twidth: 75%;\\n\\t\\theight: 100%;\\n\\t\\tborder: 1px solid #8D0707;\\n\\t\\ttext-align: center;\\n\\t}\\n\\n\\t .search-content{\\n\\t\\tpadding-top: 1.8%;\\n\\t\\tpadding-left: 1% !important;\\n\\t}\\n\\n    .nav-li{\\n    \\tcolor: maroon;\\n\\t\\tdisplay: block;\\n\\t\\tpadding: 0.8rem 0.3rem;\\n\\t\\tfont-size: 9px;\\n    }\\n\\n    .navbar{\\n\\t\\tpadding: 0rem 30% !important;\\n\\t}\\n\\n\\t.login-button{\\n\\t \\tbackground-color: maroon;\\n\\t \\tfont-size: 7px;\\n\\t \\tborder: 1px solid black;\\n\\t \\ttext-align: center;\\n\\t \\tvertical-align: center;\\n\\t \\theight: 1%;\\n\\t }\\n\\n\\t .signup-button{\\n\\t\\tbackground-color: maroon;\\n\\t\\tfont-size: 7px;\\n\\t\\tborder: 1px solid black;\\n\\t\\ttext-align: center;\\n\\t\\tvertical-align: center;\\n\\t\\theight: 1%;\\n\\t}\\t \\n}\\n\\n\\n\\n\"","module.exports = \"<div class=\\\"container-fluid navigation\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2 col-sm-2\\\">\\n      <div class=\\\"logo\\\" (click)=\\\"navigateToHome()\\\">FindMyShow</div>\\n    </div>\\n    <div class=\\\"col-md-8 col-sm-8\\\">\\n      <div class=\\\"form-group search-box\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"search_subject\\\" placeholder=\\\"Search for movies\\\" (keyup.enter)=\\\"searchMovies(seachForm.value)\\\"\\n          [formControl]=\\\"seachForm\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-2 col-sm-2 search-content\\\">\\n      <a class=\\\"btn btn-primary search-button\\\" role=\\\"button\\\" (click)=\\\"searchMovies(seachForm.value)\\\">Search</a>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"navbar\\\">\\n      <nav class=\\\"navset\\\">\\n        <a class=\\\"nav-li\\\" href=\\\"/home\\\">Home</a>\\n        <a class=\\\"nav-li\\\" href=\\\"/coming_soon\\\">Coming Soon</a>\\n        <a class=\\\"nav-li\\\" href=\\\"/wish_list\\\">Wish List</a>\\n        <a class=\\\"nav-li\\\" href=\\\"/latest\\\">Latest</a>\\n      </nav>\\n      <div class=\\\"log\\\" *ngIf=\\\"!this.authenticationService.isLoggedIn()\\\">\\n        <button class=\\\"btn btn-primary login-button\\\" (click)=\\\"openDialog()\\\">Log In</button>\\n      </div>\\n      <div class=\\\"signup\\\" *ngIf=\\\"!this.authenticationService.isLoggedIn()\\\">\\n        <button class=\\\"btn btn-primary login-button\\\" (click)=\\\"openSignUp()\\\">Sign Up</button>\\n      </div>\\n      <div class=\\\"nav dropdown\\\" *ngIf=\\\"this.authenticationService.isLoggedIn()\\\">\\n        <button class=\\\"btn btn-danger user-button dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n          aria-expanded=\\\"false\\\" (click)=\\\"toggleDropdown()\\\">\\n          hi, {{this.authenticationService.getUser().firstName}}!\\n        </button>\\n        <div class=\\\"dropdown-menu\\\" id=\\\"dropdownMenuButton\\\">\\n          <a class=\\\"dropdown-item nav-li\\\" [routerLink]=\\\"['preferences']\\\">Set Preferences</a>\\n          <a class=\\\"dropdown-item nav-li\\\" href=\\\"#\\\" (click)=\\\"logOut()\\\">Log out</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\nimport { MatDialog } from '../../../../node_modules/@angular/material';\n\nimport { LoginComponent } from '../login/login.component';\nimport { SignupComponent } from '../signup/signup.component';\nimport { FormControl } from '@angular/forms';\nimport { MovieService } from '../../Services/movie.service';\nimport { AuthenticationService } from '../../Services/authentication.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n\n  seachForm = new FormControl('');\n\n\n  constructor(public dialog: MatDialog, private movieService: MovieService,\n    private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n  //opens pop up when login is clicked.\n  openDialog() {\n    const dialogReference = this.dialog.open(LoginComponent, {\n      width: '600px'\n    })\n    this.authenticationService.setDialogRef(dialogReference);\n    return false;\n  }\n\n  //opens pop up when sign up button is clicked\n  openSignUp() {\n    const dialogReference = this.dialog.open(SignupComponent, { width: '600px' })\n\n    //action needed after dialog is closed.\n    dialogReference.afterClosed().subscribe(result => { console.log(\"dialog was closed\"); });\n    return false;\n  }\n\n  searchMovies(movieName: string) {\n    this.router.navigate(['search', { name: movieName }]);\n  }\n\n  navigateToHome() {\n    this.router.navigate(['home']);\n\n  }\n\n  //logs out the user\n  logOut() {\n    this.authenticationService.logout();\n  }\n\n  toggleDropdown() {\n    document.getElementById('dropdownMenuButton').classList.toggle('show');\n  }\n}","export class Preference {\n\n\tpublic email: string;\n\tpublic genres: [number, string];\n\tpublic languages: [number, string];\n\tpublic actors: [number, string];\n\n}","module.exports = \".prefer{\\n\\twidth: 50%;\\n}\"","module.exports = \"<div class=\\\"container prefer\\\">\\n  <p>Email</p>\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" required [(ngModel)]=\\\"preference.email\\\" name=\\\"email\\\"><br>\\n  <p>Genre</p>\\n\\n  <ng-multiselect-dropdown [placeholder]=\\\"'Select Genres'\\\" [data]=\\\"genreList\\\" [(ngModel)]=\\\"preference.genreList\\\"\\n    [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"onItemSelect($event)\\\" (onSelectAll)=\\\"onSelectAll($event)\\\" name=\\\"genres\\\"></ng-multiselect-dropdown><br>\\n\\n  <p>Language</p>\\n\\n  <ng-multiselect-dropdown [placeholder]=\\\"'Select Languages'\\\" [data]=\\\"languageList\\\" [(ngModel)]=\\\"preference.languageList\\\"\\n    [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"onItemSelect($event)\\\" (onSelectAll)=\\\"onSelectAll($event)\\\" name=\\\"languages\\\"></ng-multiselect-dropdown><br>\\n\\n  <p>Actor</p>\\n\\n  <ng-multiselect-dropdown [placeholder]=\\\"'Select Actors'\\\" [data]=\\\"actorsList\\\" [(ngModel)]=\\\"preference.actorsList\\\"\\n    [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"onItemSelect($event)\\\" (onSelectAll)=\\\"onSelectAll($event)\\\" name=\\\"actors\\\"></ng-multiselect-dropdown><br>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"submitNewPreference()\\\">Submit</button><br><br>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { PreferenceService } from '../../Services/preference.service';\nimport { Preference } from '../../Components/preference.model';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-preferences',\n  templateUrl: './preferences.component.html',\n  styleUrls: ['./preferences.component.css']\n})\n\nexport class PreferencesComponent implements OnInit {\n\n  public preference: Preference;\n  private user_id: number;\n  genreList = [];\n  languageList = [];\n  actorsList = [];\n\n  dropdownSettings = {};\n\n  submitted = false;\n\n  onSubmit() { this.submitted = true; }\n\n  constructor(public preferenceService: PreferenceService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.preference = new Preference();\n    this.route.params.subscribe(params => { this.user_id = params['user_id'] });\n    this.getPreference();\n\n    this.genreList = [\n      { id: 1, item_text: 'Action' },\n      { id: 2, item_text: 'Drama' },\n      { id: 3, item_text: 'Romance' },\n      { id: 4, item_text: 'Thriller' },\n      { id: 5, item_text: 'Comedy' }\n    ];\n\n    this.languageList = [\n      { id: 1, item_text: 'English' },\n      { id: 2, item_text: 'Spanish' },\n      { id: 3, item_text: 'Hindi' }\n    ];\n\n    this.actorsList = [\n      { id: 1, item_text: 'Will Smith' },\n      { id: 2, item_text: 'Tom Hanks' },\n      { id: 3, item_text: 'Angelina Jolie' },\n      { id: 4, item_text: 'Tom Cruise' }\n    ];\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'id',\n      textField: 'item_text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 3,\n      allowSearchFilter: true,\n    };\n  }\n\n  onItemSelect (item:any) {\n    console.log(item);\n  }\n\n  onSelectAll (items: any) {\n    console.log(items);\n  }\n\n  get diagnostic() { return JSON.stringify(this.preference); }\n\n\n  submitPreference(){\n    this.preferenceService.updatePreferences(this.user_id , this.preference);\n  }\n\n  submitNewPreference(){\n    this.preferenceService.updateNewPreferences(this.preference);\n  }\n\n  getPreference(){\n    this.preferenceService.getPreferencesById(this.user_id).subscribe((response: any) => {\n      this.preference = response;\n    });\n  }\n}","module.exports = \"input.ng-invalid.ng-touched {\\n    border-color: red;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"OnSignup()\\\" *ngIf = \\\"!isSignedUp\\\">\\n              \\n        <div formGroupName=\\\"signupData\\\">\\n\\n          <div class=\\\"form-group\\\">\\n          <h3>New User:</h3>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n          <label for=\\\"firstname\\\">First Name:</label>\\n          <input class=\\\"form-control\\\" \\n                 type=\\\"string\\\" \\n                 name=\\\"firstname\\\" \\n                 id=\\\"firstname\\\" \\n                 formControlName=\\\"firstname\\\"\\n                 placeholder=\\\"{{fnamePlaceholder}}\\\"\\n                 [(ngModel)]=\\\"credentials.firstname\\\">\\n          </div>\\n          <span class=\\\"help-block\\\"                \\n                *ngIf=\\\"!signupForm.get('signupData.firstname').valid && signupForm.get('signupData.firstname').touched\\\">\\n          <p style=\\\"color: red\\\">First Name is required</p>  \\n          </span>   \\n                \\n          <div class=\\\"form-group\\\">\\n          <label for=\\\"lastname\\\">Last Name:</label>\\n          <input class=\\\"form-control\\\" \\n                 type=\\\"string\\\" \\n                 name=\\\"lastname\\\" \\n                 id=\\\"lastname\\\" \\n                 formControlName=\\\"lastname\\\"\\n                 placeholder=\\\"{{lnamePlaceholder}}\\\"\\n                 [(ngModel)]=\\\"credentials.lastname\\\">\\n          </div>\\n          <span class=\\\"help-block\\\"                \\n                *ngIf=\\\"!signupForm.get('signupData.lastname').valid && signupForm.get('signupData.lastname').touched\\\">\\n          <p style=\\\"color: red\\\">Last Name is required</p>  \\n          </span>                 \\n\\n          <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email:</label>\\n          <input class=\\\"form-control\\\" \\n                 type=\\\"email\\\" \\n                 name=\\\"email\\\" \\n                 id=\\\"email\\\" \\n                 formControlName=\\\"email\\\"\\n                 placeholder=\\\"{{emailPlaceholder1}}\\\"\\n                [(ngModel)]=\\\"credentials.email\\\">\\n          </div>             \\n          <span class=\\\"help-block\\\"\\n                *ngIf=\\\"!signupForm.get('signupData.email').valid && signupForm.get('signupData.email').touched\\\">          \\n          <p style=\\\"color: red\\\">Please enter a valid email</p> \\n          </span>\\n                \\n          <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password:</label>\\n          <input class=\\\"form-control\\\" \\n                 type=\\\"password\\\" \\n                 name=\\\"password\\\" \\n                 id=\\\"password\\\" \\n                 formControlName=\\\"password\\\"\\n                 placeholder=\\\"{{passwordPlaceholder1}}\\\"\\n                 [(ngModel)]=\\\"credentials.password\\\">\\n          </div>\\n          <span class=\\\"help-block\\\"\\n                *ngIf=\\\"!signupForm.get('signupData.password').valid && signupForm.get('signupData.password').touched\\\">\\n          <p style=\\\"color: red\\\">Password is required</p>  \\n          </span>\\n              \\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"location\\\">Location:</label>\\n            <select class=\\\"form-control\\\"\\n                    id=\\\"location\\\" \\n                    name=\\\"location\\\"\\n                    [(ngModel)]=\\\"credentials.location\\\"\\n                    [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    <option *ngFor=\\\"let c of cities\\\" [ngValue]=\\\"c.id\\\">{{c.name}}</option>\\n            </select>\\n          </div>        \\n\\n          <div class=\\\"form-group\\\">                    \\n          <input type = \\\"checkbox\\\"\\n                 name = \\\"check\\\"  formControlName = \\\"check\\\" id=\\\"check\\\">\\n              By clicking this checkbox, you agree to our <font color = \\\"Blue\\\">Terms & Conditions</font> \\n              and <font color = \\\"Blue\\\">Privacy Policy </font>                 \\n          </div> \\n          <span class=\\\"help-block\\\"\\n          *ngIf=\\\"!signupForm.get('signupData.check').valid && signupForm.get('signupData.check').touched\\\">\\n          <p style=\\\"color: red\\\">Please agree to terms and conditions for sign up</p>  \\n          </span>\\n              \\n          <button [disabled]=\\\"!signupForm.valid\\\" class=\\\"btn btn-danger\\\" type=\\\"submit\\\" >Sign Up</button>         \\n        </div> \\n        <br><p *ngIf=\\\"isError\\\" style=\\\"color: red\\\">{{error_msg}}</p>               \\n      </form>      \\n    </div> \\n    <p *ngIf=\\\"isSignedUp\\\">{{success_msg}}</p>         \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '../../../../node_modules/@angular/forms';\nimport { TokenPayload, AuthenticationService } from '../../Services/authentication.service';\nimport { User } from '../user.model';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit {\n\n  isSignedUp: boolean;\n  isError: boolean;\n  credentials: TokenPayload = {\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    location: '' \n  };\n  error_msg: string;\n  success_msg: string;\n\n  cities = [\n    {id: 1, name: \"Tempe\"},\n    {id: 2, name: \"Chandler\"},\n    {id: 3, name: \"Phoenix\"},\n    {id: 4, name: \"Mesa\"}\n  ];\n\n  //variable that binds with html form.\n  signupForm: FormGroup;\n  fnamePlaceholder: string;\n  lnamePlaceholder: string;\n  emailPlaceholder1: string;\n  passwordPlaceholder1 : string;\n  requestedUser: User;\n\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  ngOnInit() {  \n    \n    this.signupForm = new FormGroup({\n      'signupData': new FormGroup({\n        'firstname': new FormControl(null,[Validators.required]),\n        'lastname': new FormControl(null,[Validators.required]),\n        'email': new FormControl(null,[Validators.required,Validators.email]),\n        'password': new FormControl(null,[Validators.required]),\n        'check': new FormControl(null, [Validators.required])\n      })\n    });\n\n    this.fnamePlaceholder = \"Please enter your first name here\";\n    this.lnamePlaceholder = \"Please enter your last name here\";\n    this.emailPlaceholder1 = \"Please enter your email here\";\n    this.passwordPlaceholder1 = \"Please enter your password here\";\n    this.isSignedUp = false;\n    this.isError = false;\n    this.error_msg = \"User already exist with this email id\";\n    this.success_msg = \"You have registered successfully to FindMyShow application!\";\n  }\n\n  OnSignup(){\n    this.auth.signup(this.credentials).subscribe(\n          () => { this.isSignedUp = true; }, \n          (err) => { this.isError = true; }\n          );\n  }\n}","module.exports = \".movie-card {\\n  background: white;\\n  text-decoration: none;\\n  color: #444;\\n  display: flex;\\n  flex-direction: column;\\n  position: relative;\\n  top: 0;\\n  transition: all .2s ease-in;\\n}\\n\\n.image-card {\\n  width: 200px;\\n  padding: 5px;\\n}\\n\\n.scroll {\\n  overflow: scroll;\\n  display: flex;\\n}\\n\"","module.exports = \"<b *ngIf=\\\"movies != 0\\\">SIMILAR MOVIES</b>\\n<div class=\\\"scroll\\\" *ngIf=\\\"movies != 0\\\">\\n  <mat-card *ngFor=\\\"let movie of movies\\\" class=\\\"movie-card\\\">\\n    <mat-card-header>\\n    </mat-card-header>\\n\\n    <mat-card-content>\\n      <img mat-card-image src={{movie.poster_path}} alt=\\\"Movie Image\\\" class=\\\"image-card\\\">\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Movie } from \"../movie.model\";\nimport { Router } from \"@angular/router\";\nimport { MovieService } from \"../../Services/movie.service\";\n\n@Component({\n  selector: \"app-similar-movies\",\n  templateUrl: \"./similar-movies.component.html\",\n  styleUrls: [\"./similar-movies.component.css\"]\n})\nexport class SimilarMoviesComponent implements OnInit {\n  public movies: Movie[];\n\n  @Input()\n  public movieID: number;\n\n  constructor(public movieService: MovieService, private router: Router) {}\n\n  ngOnInit() {\n    this.movieService\n      .getSimilarMovies(this.movieID)\n      .subscribe((response: Movie[]) => {\n        this.movies = response;\n      });\n  }\n}\n","module.exports = \".timings{\\n\\tpadding-left: 10px;\\n}\\n\\n.scroller {\\n    overflow: scroll;\\n    height: 250px;\\n}\\n\\na {\\n    color: maroon;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-tab-group>\\n  <mat-tab label=\\\"Today\\\">\\n    <br>\\n    <div class=\\\"row container scroller\\\">\\n    \\t<div class=\\\"col-6 row\\\" *ngFor=\\\"let day of day1\\\">\\n    \\t\\t <h6>{{ day.theatre }} </h6>\\n          <div class=\\\"row container\\\">\\n            <p class=\\\"timings\\\" *ngFor=\\\"let showTime of day['times']\\\">\\n             {{ showTime.time }}\\n            </p>\\n          </div>\\n          <a class=\\\"maroon row container\\\" href= \\\"{{day.movie_link}}\\\" >Book Tickets</a>\\n    \\t</div>\\n    </div>\\n  </mat-tab>\\n  <mat-tab label=\\\"Tomorrow\\\">\\n    <br>\\n    <div class=\\\"row container\\\">\\n    \\t<div class=\\\"col-md-3\\\" *ngFor=\\\"let day of day2\\\">\\n    \\t\\t{{ day.time }} {{ day.theatre }}\\n    \\t</div>\\n    </div>\\n  </mat-tab>\\n  <mat-tab label=\\\"Day After\\\">\\n    <br>\\n    <div class=\\\"row container\\\">\\n    \\t<div class=\\\"col-md-3\\\" *ngFor=\\\"let day of day3\\\">\\n    \\t\\t{{ day.time }} {{ day.theatre }}\\n    \\t</div>\\n    </div>\\n  </mat-tab>\\n</mat-tab-group></div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Movie } from '../../Components/movie.model';\nimport { MovieDetailsComponent } from '../movie-details/movie-details.component';\n\n@Component({\n  selector: 'app-time-and-theatre',\n  templateUrl: './time-and-theatre.component.html',\n  styleUrls: ['./time-and-theatre.component.css']\n})\nexport class TimeAndTheatreComponent implements OnInit {\n  \n  public movie_id: number;\n  public movie: Movie;\n  day1 = [];\n  day2 = [];\n  day3 = [];\n  tempTimes = [];\n  link;\n\n  constructor(public movieDetails: MovieDetailsComponent) { }\n\n  ngOnInit() {\n    this.attachCinema()\n  }\n\n  attachCinema(){\n    this.movie = this.movieDetails.movie;\n\n    for(let cinema of this.movie[\"cinema_detail\"]){\n      this.tempTimes = [];\n      for(let show of this.movie[\"show_detail\"]){\n        if(cinema[\"id\"] == show[\"cinema_id\"]){\n          let x = show[\"time\"].split(\"-\");\n          let y = x[2].split(\"T\");\n          let z = y[1].split(\":\");\n          let actualTime = z[0]+\":\"+z[1];\n          this.link = show[\"booking_link\"];\n          this.tempTimes.push({\n            time: actualTime\n          });\n        }\n      }\n      this.day1.push({\n        theatre: cinema[\"name\"],\n        movie_link: this.link,\n        times: this.tempTimes\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators/map';\nimport { MatDialogRef } from '../../../node_modules/@angular/material';\nimport { LoginComponent } from '../Components/login/login.component';\n\nexport interface User {\n  _id: string;\n  email: string;\n  name: string;\n  exp: number;\n  iat: number;\n}\n\ninterface TokenResponse {\n  token: string;\n}\n\nexport interface TokenPayload {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  location: string;\n}\n\n@Injectable()\nexport class AuthenticationService {\n  private token: string;\n  private dialogRef: MatDialogRef<LoginComponent>;\n\n  constructor(private httpClient: HttpClient, private router: Router) {\n\n  }\n\n  //method to save token in localStorage.\n  private saveToken(token: string) {\n    localStorage.setItem('token', token);\n    this.token = token;\n  }\n\n  //method to retrieve token. \n  private getToken() {\n    if (!this.token) {\n      this.token = localStorage.getItem('token');\n    }\n\n    return this.token;\n  }\n\n  //logout method.\n  public logout() {\n    this.token = \"\";\n    window.localStorage.removeItem('token');\n    this.router.navigateByUrl(\"/home\");\n  }\n\n  //method to parse user details from JWT token.\n  public getUser() {\n    const token = this.getToken();\n    let payLoad;\n\n    if (token) {\n      payLoad = token.split('.')[1];\n      payLoad = window.atob(payLoad);\n      return JSON.parse(payLoad);\n    } else {\n      return null;\n    }\n  }\n\n  //check whether the user is logged in\n  public isLoggedIn() {\n    const user = this.getUser();\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n\n  //generalized method to make http requests to server\n  private request(method: 'post' | 'get', type: 'login' | 'signup', user?: TokenPayload): Observable<any> {\n    let base;\n\n    if (method === 'post' && type === 'login') {\n      base = this.httpClient.post(\"/auth/\", user);\n    }\n    else if (method === 'post' && type === 'signup') {\n      base = this.httpClient.post(\"/users/\", user);\n    }\n    else {\n      base = this.httpClient.get(\"/auth/${type}\", { headers: { Authorization: `Bearer ${this.getToken()}` } });\n    }\n\n    const request = base.pipe(map(\n      (data: TokenResponse) => {\n        if (data.token) {\n          this.saveToken(data.token);\n        }\n        return data;\n      }\n    ));\n    return request;\n  }\n\n  //login method\n  public login(user: TokenPayload): Observable<any> {\n    return this.request('post', 'login', user);\n  }\n\n  //signup method\n  public signup(user: TokenPayload): Observable<any> {\n    return this.request('post', 'signup', user);\n  }\n\n  //setter method for dialog reference\n  public setDialogRef(dialogRef) {\n    this.dialogRef = dialogRef;\n  }\n\n  //getter method for dialog reference\n  public getDialogRef() {\n    return this.dialogRef;\n  }\n}\n","import { Movie } from \"../Components/movie.model\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\n// import { timingSafeEqual } from 'crypto';\n\n/*\n* A service Class that acts as centralized repository for handling movie data.\n* @Author: Sai Saran Kandimalla.\n* @Author: Shilpa Bhat\n* @version 1: created on 09/18/2018.\n*/\n@Injectable()\nexport class MovieService {\n  //Sample data for movies.\n  public movies: Movie[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  /* A getter method to get movies.\n    * @returns movies: Movie[].\n    */\n  getMovies() {\n    return this.http.get(\"/movies\", { responseType: \"json\" });\n  }\n\n  /* A getter method to get movie details */\n  getMovieDetails(id: number) {\n    return this.http.get(\"/movies/\" + id, {\n      responseType: \"json\"\n    });\n  }\n\n  getSearchedMovieList(movieName: string) {\n    return this.http.get(\n      \"/movies/?type=search&name=\" + movieName\n    );\n  }\n\n  getUpcomingMovieList() {\n    return this.http.get(\"/movies/?type=upcoming\", {\n      responseType: \"json\"\n    });\n  }\n\n  getSimilarMovies(id: number) {\n    return this.http.get(\n      \"/movies/\" + id + \"/?type=similar\",\n      {\n        responseType: \"json\"\n      }\n    );\n  }\n}\n","import { Preference } from \"../Components/preference.model\";\nimport { Injectable } from \"../../../node_modules/@angular/core\";\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams\n} from \"../../../node_modules/@angular/common/http\";\n// import { timingSafeEqual } from 'crypto';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Authorization': 'my-auth-token'\n  })\n};\n\n@Injectable()\nexport class PreferenceService {\n\n  public preference: Preference;\n  public var;\n\n  constructor(private http: HttpClient) { }\n\n  getPreferencesById(id: number) {\n\n    return this.http.get(\"/preferences/\" + id, {\n      responseType: \"json\"\n    });\n  }\n\n  getPreferencesByEmail() {\n    return this.http.get(\"/preferences/\", {\n      responseType: \"json\"\n    });\n  }\n\n  updatePreferences(id: number, preferences: Preference) {\n    this.http.put(\"/preferences/\" + id,\n      preferences, httpOptions).subscribe(results => this.var = results);\n  }\n\n  updateNewPreferences(preferences: Preference) {\n    this.http.post(\"/preferences/\", preferences, httpOptions)\n      .subscribe(results => this.var = results);\n  }\n}\n","module.exports = \"\"","module.exports = \"<!--The division below handles navigation bar.-->\\n<app-navbar></app-navbar>\\n<br>\\n<!--The division below handles approutes.-->\\n<router-outlet></router-outlet>\\n<!--The division below handles footer-->\\n<app-footer></app-footer>\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  \n  \n  \n  constructor() { }\n\n  ngOnInit() {\n   \n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material';\nimport { HttpClientModule } from '../../node_modules/@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { AppComponent } from './app.component';\nimport { MovieCardComponent } from './Components/MovieComponents/movie-card-component/movie-card.component';\nimport { NavbarComponent } from './Components/navbar/navbar.component';\nimport { HomeComponent } from './Components/home/home.component';\nimport { FooterComponent } from './Components/footer/footer.component';\nimport { MovieDetailsComponent } from './Components/movie-details/movie-details.component';\nimport { MovieSlideComponent } from './Components/MovieComponents/movie-slide/movie-slide.component';\nimport { LoginComponent } from './Components/login/login.component';\n\nimport { MovieService } from './Services/movie.service';\nimport { ReactiveFormsModule } from '../../node_modules/@angular/forms';\nimport { AuthenticationService } from './Services/authentication.service';\nimport { SignupComponent } from './Components/signup/signup.component';\nimport { PreferencesComponent } from './Components/preferences/preferences.component';\nimport { SimilarMoviesComponent } from './Components/similar-movies/similar-movies.component';\nimport { TimeAndTheatreComponent } from './Components/time-and-theatre/time-and-theatre.component';\nimport { PreferenceService } from './Services/preference.service';\n\n\nconst routes: Routes = [\n    { path: 'coming_soon', component: HomeComponent },\n    { path: 'wish_list/:id', component: HomeComponent },\n    { path: 'latest', component: HomeComponent },\n    { path: 'home', component: HomeComponent },\n    { path: 'movie_details', component: MovieDetailsComponent },\n    { path: 'search', component: HomeComponent },\n    { path: 'preferences', component: PreferencesComponent },\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n];\n\n@NgModule({\n    entryComponents: [\n        LoginComponent,\n        SignupComponent\n    ],\n    declarations: [\n        AppComponent,\n        MovieCardComponent,\n        NavbarComponent,\n        HomeComponent,\n        FooterComponent,\n        MovieDetailsComponent,\n        MovieSlideComponent,\n        LoginComponent,\n        SignupComponent,\n        PreferencesComponent,\n        SimilarMoviesComponent,\n        TimeAndTheatreComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        MatCardModule,\n        MatDialogModule,\n        ReactiveFormsModule,\n        RouterModule.forRoot(routes, { useHash: true }),\n        MatToolbarModule,\n        HttpClientModule,\n        FormsModule,\n        NgMultiSelectDropDownModule.forRoot(),\n        MatTabsModule\n    ],\n    providers: [MovieService, AuthenticationService, PreferenceService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}